/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three"
import React, { useEffect, useRef } from "react";
import { PivotControls, useGLTF, useScroll } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";

export function WorldCup({ config, pivot = false }) {
  const group = useRef()
  const rotationRef = useRef();
  const positionRef = useRef();
  const data = useScroll();

  useEffect(() => {
    window.addEventListener("keydown", (event) => {
      if (event.keyCode === 69 && pivot) {
        // Le code 69 correspond Ã  la touche "E"
        console.log(positionRef.current, rotationRef.current);
      }
    });
  }, []);

  useFrame(() => {
    if(data.visible(0.9,1) && group.current && group.current.visible == false){
      group.current.visible = true;
    }
    else if(!data.visible(0.9,1) && group.current.visible){
      group.current.visible = false;

    }
  })

  const { nodes, materials } = useGLTF("/src/assets/models/WORLCUP.glb");

  const groupRender = (
    <group dispose={null} {...config} scale={0.02} ref={group} visible={false}>
    <group scale={1} >
      <mesh
        geometry={nodes.Object_8.geometry}
        material={materials.Trophy_Mtl}
      />
      <mesh
        geometry={nodes.Object_11.geometry}
        material={materials.Trophy_base_Mtl}
      />
    </group>
    </group>
  );
  return (
    <>
      {pivot ? (
        <PivotControls
          scale={0.1}
          onDrag={(l, dl, w, dw) => {
            const position = new THREE.Vector3();
            const rotation = new THREE.Quaternion();
            w.decompose(position, rotation, new THREE.Vector3());
            rotationRef.current = rotation.toArray();
            positionRef.current = position.toArray();
          }}
        >
          {groupRender}
        </PivotControls>
      ) : (
        <>{groupRender}</>
      )}
    </>
  );
}

useGLTF.preload("/WORLCUP.glb");
