/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
import * as THREE from "three";
import React, { useEffect, useRef, useState } from "react";
import { useGLTF, useScroll } from "@react-three/drei";
import { useFrame, useLoader } from "@react-three/fiber";
import Player from "./Player";

export default function Goal3({ actionBall, nodes }) {
  const group = useRef();
  const shooterAction = useRef(null);
  const goalAction = useRef(null);
  const passAction = useRef(null);
  const [durations, setDurations] = useState();

  const data = useScroll();

  const matcap = useLoader(
    THREE.TextureLoader,
    "/src/assets/img/spectator.png"
  );
  const material = new THREE.MeshMatcapMaterial({
    matcap,
    side: THREE.DoubleSide,
  });

  useEffect(() => {}, []);

  useFrame(() => {
    if (durations == null && shooterAction.current && goalAction.current) {
      const tmpDurations = [];
      actionBall["Ball3"].play().paused = true;
      shooterAction.current["Pass"].play().paused = true;
      goalAction.current["Crouch"].play().paused = true;
      tmpDurations.push(actionBall["Ball2"].getClip().duration);
      tmpDurations.push(shooterAction.current["PassEnd"].getClip().duration);
      tmpDurations.push(goalAction.current["Crouch"].getClip().duration);
      setDurations([...tmpDurations]);
    }
    if (!data.visible(0.8, 0.24) && group.current.visible == true) {
      group.current.visible = false;
    } else if (data.visible(0.8, 0.24)) {
      if (group.current.visible == false) {
        group.current.visible = true;
      }
      if (durations !== null && durations.length > 0) {
        actionBall["Ball3"].time = data.range(0.8625, 0.1) * durations[0];
        goalAction.current["Crouch"].time =
          data.range(0.85, 0.21) * durations[1];
        shooterAction.current["Pass"].time =
          data.range(0.815, 0.15) * durations[2];
      }
    }
  });

  return (
    <>
      <group ref={group} visible={true}>
        <Player
          action={shooterAction}
          material={material}
          config={{
            position: [
              0.09487924135671896, 0.021625045894751945, 0.4205829105373414,
            ],
            quaternion: [
              -0.00003103834688149986, -0.15880883476276686,
              0.000004529672999744995, 0.9873093502126856,
            ],
          }}
        ></Player>

        <Player
          action={goalAction}
          material={material}
          config={{
            position: [
              0.046104376952320475, 0.021878943518959873, 0.5521084960601799,
            ],
            quaternion: [
              5.678314289845093e-7, 0.9995779385530085,
              -0.000009212121644286011, -0.029050725858959854,
            ],
          }}
        ></Player>

        <group name="but_3">
          <mesh
            castShadow
            name="Ball3"
            geometry={nodes.Ball3.geometry}
            material={material}
            position={[0, 0.026, 0.37]}
            rotation={[2.552, 0.765, -2.708]}
            scale={0.004}
          />
        </group>
      </group>
    </>
  );
}

useGLTF.preload("/src/assets/models/foot.glb");
